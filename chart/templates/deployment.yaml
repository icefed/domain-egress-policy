{{- $fullName := include "domain-egress-policy.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "domain-egress-policy.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "domain-egress-policy.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "domain-egress-policy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "domain-egress-policy.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      enableServiceLinks: false
      restartPolicy: Always
      dnsPolicy: Default
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "domain-egress-policy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NS
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SA
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8081
              name: healthz
              protocol: TCP
            - containerPort: 8053
              name: dns
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
             - mountPath: "/tmp/k8s-webhook-server/serving-certs"
               name: cert
               readOnly: true
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ template "domain-egress-policy.admissionWebhookSecret" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
